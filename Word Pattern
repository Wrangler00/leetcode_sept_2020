Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Example 1:

Input: pattern = "abba", str = "dog cat cat dog"
Output: true
Example 2:

Input:pattern = "abba", str = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", str = "dog cat cat dog"
Output: false
Example 4:

Input: pattern = "abba", str = "dog dog dog dog"
Output: false
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters that may be separated by a single space.


//cpp my solution

class Solution {
public:
    bool wordPattern(string pattern, string str) {
        unordered_map<string,char> mp;
        unordered_map<char,string> pm;
        
        istringstream iss(str);
        vector<string> words{istream_iterator<string>{iss},istream_iterator<string>{}};
        
        int len = pattern.length(),sz = words.size();
        
        if(len!=sz) return false;
        
        for(int i=0;i<sz;i++){
            if(mp.find(words[i])!=mp.end()){
                if(mp.at(words[i])!=pattern[i])
                    return false;
            }else if(pm.find(pattern[i])!=pm.end()){
                return false;
            }else{
                mp[words[i]] = pattern[i];
                pm[pattern[i]] = words[i];
            }
        }
        return true;
    }
};
